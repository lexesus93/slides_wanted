# Development Dockerfile for Backend
FROM node:18-alpine

# Устанавливаем необходимые системные пакеты
RUN apk add --no-cache \
    chromium \
    nss \
    freetype \
    freetype-dev \
    harfbuzz \
    ca-certificates \
    ttf-freefont \
    python3 \
    make \
    g++

# Устанавливаем переменные окружения для Puppeteer
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser

# Создаем рабочую директорию
WORKDIR /app

# Копируем package.json и package-lock.json (если есть)
COPY package*.json ./

# Устанавливаем зависимости
RUN npm ci

# Устанавливаем глобальные пакеты для разработки
RUN npm install -g nodemon ts-node tsconfig-paths

# Копируем исходный код
COPY . .

# Создаем необходимые директории
RUN mkdir -p logs uploads temp

# Устанавливаем права доступа
RUN chown -R node:node /app

# Переключаемся на пользователя node
USER node

# Экспортируем порты
EXPOSE 3000 9229

# Команда по умолчанию для разработки с отладкой
CMD ["npm", "run", "dev"]

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "const http = require('http'); \
               const options = { hostname: 'localhost', port: 3000, path: '/health', timeout: 2000 }; \
               const req = http.request(options, (res) => { \
                 process.exit(res.statusCode === 200 ? 0 : 1); \
               }); \
               req.on('error', () => process.exit(1)); \
               req.end();"
